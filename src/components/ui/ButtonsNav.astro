---
import DropDown from "./DropDown";
import type { HTMLAttributes } from "astro/types";

interface SubLink {
  Subtitle: string;
  options: string[];
  href: string;
}
// or extend with an `interface`
interface Props extends HTMLAttributes<"a"> {
  myProp?: boolean;
  className?: string;
}

interface Link {
  title: string;
  href: string;
  subLinks?: SubLink[];
}

let links: Link[] = [
  { title: "Works", href: "/works" },
  {
    title: "Services",
    href: "/services",
    subLinks: [
      {
        Subtitle: "MARKETING",
        options: ["Product Strategy", "Business Analysis", "UX Audit"],
        href: "/services/marketing",
      },
      {
        Subtitle: "DESIGN",
        options: [
          "UI/UX Design",
          "Website Design",
          "Branding",
          "Graphic Design",
        ],
        href: "/services/design",
      },
      {
        Subtitle: "DEVELOPMENT",
        options: ["Web Development", "Mobile Development", "DevOps"],
        href: "/services/development",
      },
    ],
  },
  { title: "About", href: "/about" },
  { title: "Contact", href: "/contact" },
];

const { href, className } = Astro.props;
---

<div class="buttons-nav">
  {
    links.map((link) =>
      link.subLinks ? (
        <DropDown client:load title={link.title} subLinks={link.subLinks} />
      ) : (
        <a href={link.href}>
          <button class="buttonNav"> {link.title} </button>
        </a>
      )
    )
  }
</div>

<style>
  .buttons-nav {
    display: flex;
    gap: 1rem;
    flex-direction: row;
  }

  .buttonNav {
    background-color: transparent;
    border: none;
    color: #fff;
    font-family: "Manrope", sans-serif;
    font-size: 1.25rem;
    font-style: normal;
    font-weight: 700;
    line-height: normal;
    transition: all 0.3s ease 0s;
    padding: 1rem 2rem;
    border-radius: 0.25rem;
  }

  .buttonNav:hover {
    background-color: #391fff22;
    color: #3a1fff;
  }

  .contact-button {
    border: 1px solid white;
  }

  .dropdown {
    position: relative;
    display: inline-block;
    z-index: 2;
  }

  .dropdown-wrapper:hover::after {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(2px);
    z-index: 1;
  }
  .dropdown-wrapper:hover .dropdown-content {
    display: flex;
  }

  .dropdown-content {
    display: none;
    position: absolute;
    background-color: #f9f9f9;
    left: 50%;
    transform: translateX(-50%);
    flex-direction: row;
    height: fit-content;
    padding: 2rem;
    width: 40vw;
    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
    z-index: 3;
    border-radius: 0.3125rem;
    background: #1b1f27;
    color: #fff;
    font-family: "Manrope" sans-serif;
    font-size: 1rem;
    font-style: normal;
    font-weight: 700;
    line-height: normal;
  }

  .dropdown:hover .dropdown-content {
    display: flex;
  }

  .dropdown-content {
    display: none;
    flex-direction: row;
  }

  .dropdown-column {
    flex: 1;
    padding: 1rem;
  }

  .subtitle {
    color: #fff;
    font-family: "Manrope";
    font-size: 1rem;
    font-style: normal;
    font-weight: 700;
    line-height: normal;
    margin-bottom: 5rem;
  }

  .options {
    color: #c7c7c7;
    font-family: "Manrope" sans-serif;
    font-size: 1rem;
    font-style: normal;
    font-weight: 700;
    line-height: normal;
  }
</style>
