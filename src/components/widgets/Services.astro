---
import ServicesCard from "../ui/ServicesCard.astro";
import Ux from "../../../public/ux.svg";
import WebDev from "../../../public/webDev.svg";
import Marketing from "../../../public/marketing.svg";
import GraphicDesign from "../../../public/graphicDesign.svg";
import he from "../../../public/locales/he/translation.json";
import en from "../../../public/locales/en/translation.json";
const { title, language } = Astro.props;

interface Props {
  title: string;
  language: string;
}

const t = language === "he" ? he : en;
---

<article
  class="general-container"
  id="services-card"
  style={{ direction: language === "he" ? "rtl" : "ltr" }}
>
  <div class="container">
    <h1 class="title">{title}</h1>
    <div class="services-card-container">
      <div id="services-card-1" class="card">
        <ServicesCard
          description={t.services.description1}
          servicesTitle={t.services.servicetitle1}
          svg={Ux}
        />
      </div>
      <div id="services-card-2" class="card">
        <ServicesCard
          description={t.services.description2}
          servicesTitle={t.services.servicetitle2}
          svg={WebDev}
        />
      </div>
      <div id="services-card-3" class="card">
        <ServicesCard
          description={t.services.description3}
          servicesTitle={t.services.servicetitle3}
          svg={Marketing}
        />
      </div>
      <div id="services-card-4" class="card">
        <ServicesCard
          description={t.services.description4}
          servicesTitle={t.services.servicetitle4}
          svg={GraphicDesign}
        />
      </div>
    </div>
  </div>
</article>

<style>
  @media screen and (max-width: 768px) {
    .container {
      min-height: 100vh !important;
    }
  }
  .container {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .services-card-container {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    justify-content: space-between;
    height: 80%;
    gap: 3rem;
    align-items: start;
    align-content: space-around;
    @media screen and (max-width: 768px) {
      grid-template-columns: 1fr;
      height: 100%;
      height: 80%;
      gap: 1rem;
      align-items: start;
      align-content: start;
    }
  }

  h1 {
    color: #fff;
    font-family: "Manrope", sans-serif;
    font-size: 3rem;
    font-style: normal;
    font-weight: 700;
    line-height: normal;
    @media screen and (max-width: 768px) {
      font-size: 1.5rem;
      te: center;
    }
  }
  @keyframes bounce-in-left {
    0% {
      transform: translateX(-20px);
      opacity: 0;
    }
    60% {
      transform: translateX(10px);
    }
    100% {
      transform: translateX(0);
      opacity: 1;
    }
  }

  @keyframes bounce-in-right {
    0% {
      transform: translateX(20px);
      opacity: 0;
    }
    60% {
      transform: translateX(-10px);
    }
    100% {
      transform: translateX(0);
      opacity: 1;
    }
  }

  .bounce-in-left {
    animation: bounce-in-left 1s forwards;
  }
  .bounce-in-right {
    animation: bounce-in-right 1s forwards;
  }
</style>

<script>
  import {
    animateOnScroll,
    elementAnimateOnScroll,
  } from "../../helpers/animation";

  // Get the width of the window
  const windowWidth = window.innerWidth;

  // Only run the animation if the window width is greater than 768px
  if (windowWidth > 768) {
    elementAnimateOnScroll("#services-card-1", "bounce-in-left");
    elementAnimateOnScroll("#services-card-2", "bounce-in-right");
    elementAnimateOnScroll("#services-card-3", "bounce-in-left");
    elementAnimateOnScroll("#services-card-4", "bounce-in-right");
  }
</script>
