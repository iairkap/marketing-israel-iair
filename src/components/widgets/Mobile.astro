---
import he from "../../../public/locales/he/translation.json";
import en from "../../../public/locales/en/translation.json";
import LanguageSelector from "../ui/LanguageSelector.astro";
interface Props {
    language?: string
   
}


const {language} = Astro.props

const t = language === "he" ? he.buttonNav : en.buttonNav


---

<div class="hamburger">

  <a class="main-nav-toggle" href="#main-nav" @click="open = !open"><i>
    <div style={language === 'he' ? { marginRight: "-3.5rem", marginTop: "2rem" } : { marginLeft: "-3.5rem", marginTop: "2rem" }}>
      <svg xmlns="http://www.w3.org/2000/svg" width="31" height="21" viewBox="0 0 21 21" fill="none">
        <path d="M0.875 20.25V17H30.125V20.25H0.875ZM0.875 12.125V8.875H30.125V12.125H0.875ZM0.875 4V0.75H30.125V4H0.875Z" fill="white"/>
      </svg> 
      
    </div>
  </i></a>
  <div >
  
  <div id="dropdown-menu" style={{display: "none",  width:"100%"}} x-show="open" @click.away="open = false" x-cloak>
<!--     <span id="close-menu" class="close" x-data="{ open: false }" @click="open = !open">x</span>    
 -->    <div
      style={{
        display: "flex",
        flexDirection: "column",
        justifyContent: "center",
        alignItems: "center",
        heigh: "190vh",
        height: "100vh"
      }}
    >
      <div
        style={{
          display: "flex",
          flexDirection: "column",
          justifyContent: "center",
          alignItems: "center",
          gap:"2rem"
        }}
      >
      <a href="#works" class="nav-link">{t.work}</a>
      <a href="#services" class="nav-link">{t.services}</a>
      <a href="#about" class="nav-link">{t.about}</a>
      {
        language === "he" ? <a href="he/contact" class="nav-link">{t.contact}</a> : <a href="/contact" class="nav-link">{t.contact}</a>
      }

      </div>
      <br><br><br><br>
      <div style={{display:"flex", gap:"1rem"}}>

          <a href="/">

            <button class="button">English</button>
          </a>
          <a href="/he">
            <button  class="button" >עברית</button>
          </a>
      </div>

      </div>
</div>
</div>
<style>

.close{
position: absolute;
top:0;
right:0;
margin-right: 2.5rem;
margin-top:3rem;
font-size: 2rem;
font-weight: 900;
color: white;

}
.button-container {
    display: inline-block;
    background: linear-gradient(
      270deg,
      #3b1fff 0%,
      rgba(38, 15, 191, 0) 96.29%
    );
    background-size: 200% 200%;
    border-radius: 0.3125rem;
    padding: 4px; 
  }

  #dropdown-menu {
    position: absolute;
    background-color: #0f121a;
    display: flex;
    flex-direction: column;
    align-items: center;
    min-width: 110%;
    z-index: 1;
    top: 0;
    left: 0;
    z-index: 2;
    height: 120vh;
    justify-content: center;
    margin-top: 5rem;
  }
  @keyframes sweep {
    0% {
      transform: scaleY(0);
      opacity: 0;
    }
    100% {
      transform: scaleY(1);
      opacity: 100;
    }
  }

  #dropdown-menu {
    transform-origin: top center;
    animation: sweep 0.3s forwards cubic-bezier(0.075, 0.82, 0.165, 1);
  }

  #dropdown-menu a {
    background-color: transparent;
    border: none;
    color: #fff;
    font-family: "Manrope", sans-serif;
    font-size: 1.5rem;
    font-style: normal;
    font-weight: 700;
    line-height: normal;
    transition: all 0.3s ease 0s;
    padding: 1rem 2rem;
    border-radius: 0.25rem;
    text-decoration: none;s
  }

  #dropdown-menu a:hover {
    color: #3a1fff;
  }



  .button {
    display: flex;
    flex-direction:;
    padding: 1.25rem 2rem;
    justify-content: center;
    align-items: center;
    min-width: 7.31rem;
    border: none;
    border-radius: 0.3125rem;
    background: rgba(15, 18, 26, 1);
    color: #fff;
    font-family: "Manrope" sans-serif;
    font-size: 1rem;
    font-weight: 700;
    transition: all 0.4s ease;
    cursor: pointer;
  }


  
</style>
<script>document.querySelector(".main-nav-toggle")?.addEventListener("click", (e: Event) => {
  e.preventDefault();
  const dropdownMenu = document.getElementById("dropdown-menu");
  const mainNavToggle = document.querySelector(".main-nav-toggle");
  const body = document.body;

  if (mainNavToggle?.classList.contains("active-menu")) {
    mainNavToggle.classList.remove("active-menu");
    if (dropdownMenu) {
      dropdownMenu.style.display = "none";
    }
    body.style.overflow = body.dataset.previousOverflow || ""; // restaurar el overflow original
  } else {
    body.dataset.previousOverflow = body.style.overflow; // guardar el overflow original
    mainNavToggle?.classList.add("active-menu");
    if (dropdownMenu) {
      dropdownMenu.style.display = "block";
    }
    body.style.overflow = "hidden"; // evitar el desplazamiento cuando el menú está abierto
  }
});

const navLinks = document.querySelectorAll(".nav-link");
navLinks.forEach((link: Element) => {
  link.addEventListener("click", function (this: Element, e:Event) {
    const href = this.getAttribute("href");

    if (href !== "/contact" && href !== "he/contact") {
      e.preventDefault();
    }

    if (href && href.startsWith("#")) {
      const target = document.querySelector(href);

      if (target) {
        target.scrollIntoView({ behavior: "smooth" });
      }
    }

    // Cerrar el menú
    const dropdownMenu = document.getElementById("dropdown-menu");
    const mainNavToggle = document.querySelector(".main-nav-toggle");
    const body = document.body;

    if (dropdownMenu && mainNavToggle?.classList.contains("active-menu")) {
      mainNavToggle.classList.remove("active-menu");
      dropdownMenu.style.display = "none";
      body.style.overflow = "visible"; // permitir el desplazamiento cuando el menú está cerrado
    }
  });
});

window.onload = function() {
  const closeMenuButton = document.getElementById('close-menu');
  const dropdownMenu = document.getElementById('dropdown-menu');

  if (!closeMenuButton || !dropdownMenu) {
    return;
  }

  closeMenuButton.addEventListener('click', function() {
    dropdownMenu.style.display = 'none';
  });
};

  </script>