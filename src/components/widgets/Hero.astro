---
import ButtonOptionA from "../ui/ButtonOptionA.astro";
import ButtonOptionB from "../ui/ButtonOptionB.astro";
import BackgroundGrid from "../ui/BackgroudGrid.astro";
interface Props {
  title: string;
  description: string;
  button1: string;
  button2: string;
  language?: string;
}

const { title, description, button1, button2, language } = Astro.props;
const direction = language === "he" ? "rtl" : "ltr";
---

<article
  class="general-container"
  style={{ flexDirection: language === "he" ? "column" : "column" }}
>
  <!--   <div class="grid" style="position: absolute">
    <BackgroundGrid />
  </div> -->

  <h1 class="title">
    {title}
  </h1>
  <!--     <span>{description}</span>
 -->
  <div class="button-container">
    <ButtonOptionA
      text={button1}
      onClick={() => console.log("Button clicked")}
    />
    <ButtonOptionB
      text={button2}
      onClick={() => console.log("Button clicked")}
    />
  </div>
  <div>
    <!--   <div class="image-container">
      <img src="./HeroVector.png" alt="background vector" class="vector" />
    </div> -->
  </div>

  <style>
    .button-container {
      display: flex;
      flex-direction: row;
      align-items: center;
      gap: 2rem;
      margin-top: 9rem;
      width: 100%;
      justify-content: center;
      @media screen and (max-width: 768px) {
        margin-top: 2rem !important;
      }
    }
    * {
      @media screen and (max-width: 768px) {
        text-align: center;
      }
    }
    .general-container {
      display: flex;
      flex-direction: row;
      justify-content: center;
      align-items: center;
      height: 60vh;
      margin-bottom: 2rem;
      @media screen and (max-width: 768px) {
        flex-direction: column !important;
        justify-items: center;
        height: 110vh;
        margin-bottom: 0;
        width: 100%;
        justify-content: center;
      }
    }
    .background-gradient {
      width: 100vw;
      position: absolute;
      margin-top: -350px;
      opacity: 40%;
      width: 100%;
      height: 100%;
      background: radial-gradient(
        102.91% 64.71% at 75.38% 27.65%,
        #391fffc9 0%,
        #3820f1d8 3%,
        #2e1cb9 18%,
        #241988 33%,
        #1c1660 47%,
        #161441 61%,
        #12132b 75%,
        #0f121e 88%,
        #0f121a 100%
      );
      z-index: -1;
    }
    .vector {
      width: 40rem;
      height: 30rem;
      @media screen and (max-width: 768px) {
        width: 15rem;
        height: 25%;
      }
    }

    .left-container {
      @media screen and (max-width: 768px) {
        width: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
      }
    }
    .title {
      font-size: 5rem;
      font-style: normal;
      font-weight: 900;
      line-height: normal;
      text-align: center;
      margin-top: 25vh;

      @media screen and (max-width: 768px) {
        font-size: 2rem;
        margin-top: 0;
      }
      @media screen and (min-width: 768px) and (max-width: 1024px) {
        font-size: 1rem;
      }
    }
    span {
      color: #fff;
      font-size: 1rem;
      font-style: normal;
      font-weight: 400;
      line-height: normal;
      @media screen and (max-width: 768px) {
        font-weight: 200;
      }
    }

    .button-container {
      display: flex;
      flex-direction: row;
      align-items: center;
      gap: 2rem;
      margin-top: 2rem;
    }
    .grid {
      z-index: -1;
      width: 100vw;
      align-items: center;
      opacity: 0.5;
    }
    h1.title {
      transition: all 0.5s;
    }

    h1.title:hover {
      /* Resto de tus estilos */
      text-shadow:
        0 0 10px #ffffff92,
        0 0 20px #ffffff89,
        0 0 30px #ffffff4a,
        0 0 40px #3c00ff96;
    }
  </style>
</article>
