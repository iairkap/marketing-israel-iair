---
import he from "../../../public/locales/he/translation.json";
import en from "../../../public/locales/en/translation.json";
const { faqs, language } = Astro.props;
interface Question {
  question: string;
  answer: string;
}

interface Props {
  faqs: Question[];
  language?: string;
}
const t = language === "he" ? he : en;
const direction = language === "he" ? "rtl" : "ltr";
---

<article style={`direction: ${direction};`}>
  <div class="title">
    <h2>{t.FAQ.title}</h2>
    <h2>{t.FAQ.span1} <span id="span">{t.FAQ.span2}</span></h2>
  </div>

  <div class="list">
    <ul>
      {
        faqs.map((faq, index) => (
          <li>
            <details id={`details-${index}`}>
              <summary>{faq.question}</summary>
              <p>{faq.answer}</p>
            </details>
          </li>
        ))
      }
    </ul>
  </div>
  <div></div>
</article>

<style>
  .title {
    text-align: center;
    display: flex;
    flex-direction: column;
    margin-bottom: 2rem;
  }
  p {
    font-size: 1rem;
    font-weight: 400;
  }
  details {
    list-style-type: none;
    @media (max-width: 768px) {
      align-self: center;
    }
  }
  h2 {
    margin: 0px;
  }
  span {
    background-image: linear-gradient(to top, #391fffa8 50%, transparent 50%);
  }
  li {
    list-style-type: none;
    padding: 40px 0;
    border-bottom: 0.5px solid white;
    font-size: 1.5rem;
    @media (max-width: 768px) {
      font-size: 1rem;
    }
  }

  /* Esto es para asegurarse de que el último elemento no tenga un borde en la parte inferior */
  li:last-child {
    border-bottom: none;
  }
  details > summary {
    list-style: none;
  }

  details > summary::-webkit-details-marker {
    display: none;
  }

  /* Add a custom marker at the end */
  details > summary::after {
    content: "▶";
    float: right;
    color: #391fffa8;
  }

  /* Change the marker when the details is open */
  details[open] > summary::after {
    content: "▼";
  }
  .list {
    min-height: 60vh;
  }

  @media screen and (max-width: 768px) {
    article {
      width: 100%;
      align-items: center;
    }
    ul {
    }
  }
  .list {
    align-self: center;
    margin-right: 1rem;
  }
</style>

<script>
  window.addEventListener("DOMContentLoaded", (event) => {
    const detailsElements = document.querySelectorAll("details");

    detailsElements.forEach((details) => {
      details.addEventListener("toggle", function () {
        if (this.open) {
          detailsElements.forEach((details) => {
            if (details !== this) {
              details.open = false;
            }
          });
        }
      });
    });
  });
</script>
